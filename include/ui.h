#ifndef __UI_H__
#define __UI_H__

#include <glenv.h>

// series of actions generated by the Overlay
typedef enum {
    ACTION_NONE = 0,
    ACTION_SKD_PASS_FASTER,
    ACTION_SKD_PASS_SLOWER,
    ACTION_SKD_PASS_PAUSE,
    ACTION_SKD_PASS_RESET
} OverlayAction;
// reduce binary size by deleting these functions
// if the UI is disabled
#ifndef NO_UI
// updates to control panel in Overlay
typedef struct {
    double jd, gmst;
    unsigned long long speed;
    unsigned int paused;
} OverlayControls;
//initialize Overlay
void Overlay_init(const char* path, RGFW_window* const win);
// pop queued action
OverlayAction Overlay_get_action();
// update the controls
void Overlay_set_controls(const OverlayControls controls);
// push a source to the active_scans list
void Overlay_add_active_scan(const char* const name);
// push a station to the stations list
void Overlay_add_station(const char* const name);
// prepare the Overlay for drawing
void Overlay_prepare_interface(const RGFW_window* const win);
#endif /* not NO_UI */
#endif /* __UI_H__ */
